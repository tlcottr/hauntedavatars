{"ast":null,"code":"var _jsxFileName = \"/Users/taylorcottrell/Desktop/Builds/hauntedavatars/src/components/Avatar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport mergeImages from \"merge-images\";\nimport randomImageGenerator from \"../utils/RandomImage\"; // components\n\nimport \"../css/Avatar.css\"; // default avatar parts\n\nimport pinkBackground from \"../images/background/pinkBackground.png\";\nimport defaultHead from \"../images/head/pumpkinHead.png\";\nimport defaultFace from \"../images/face/pumpkinFace.png\";\nimport defaultAccessory from \"../images/accessories/pumpkinAccessory.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Avatar() {\n  _s();\n\n  const [background, setBackground] = useState(pinkBackground);\n  const [head, setHead] = useState(defaultHead);\n  const [face, setFace] = useState(defaultFace);\n  const [accessory, setAccessory] = useState(defaultAccessory);\n\n  const getRandomImage = () => {\n    const avatar = randomImageGenerator();\n    setBackground(avatar.background);\n    setAccessory(avatar.accessory);\n    setHead(avatar.head);\n    setFace(avatar.face);\n  };\n\n  const downloadImage = () => {\n    const avatarImage = document.querySelector(\"#avatar\");\n    const link = document.createElement(\"a\");\n    link.download = \"avatar.png\";\n    link.href = avatarImage.src;\n    link.click();\n  };\n\n  useMemo(() => {\n    const parts = [{\n      src: background\n    }, {\n      src: accessory\n    }, {\n      src: head\n    }, {\n      src: face\n    }];\n    mergeImages(parts).then(avatar => document.querySelector(\"#avatar\").src = avatar);\n  }, [background, head, face, accessory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"avatar\",\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-pane-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRandomImage,\n          children: \"Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Avatar, \"wgvu2j6yyR8W21Eg7+I8Cn9VSpU=\");\n\n_c = Avatar;\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"sources":["/Users/taylorcottrell/Desktop/Builds/hauntedavatars/src/components/Avatar.js"],"names":["React","useState","useMemo","mergeImages","randomImageGenerator","pinkBackground","defaultHead","defaultFace","defaultAccessory","Avatar","background","setBackground","head","setHead","face","setFace","accessory","setAccessory","getRandomImage","avatar","downloadImage","avatarImage","document","querySelector","link","createElement","download","href","src","click","parts","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,oBAAP,MAAiC,sBAAjC,C,CAEA;;AAEA,OAAO,mBAAP,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACI,cAAD,CAA5C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACK,WAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACM,WAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACO,gBAAD,CAA1C;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC3B,UAAMC,MAAM,GAAGf,oBAAoB,EAAnC;AACAO,IAAAA,aAAa,CAACQ,MAAM,CAACT,UAAR,CAAb;AACAO,IAAAA,YAAY,CAACE,MAAM,CAACH,SAAR,CAAZ;AACAH,IAAAA,OAAO,CAACM,MAAM,CAACP,IAAR,CAAP;AACAG,IAAAA,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP;AACD,GAND;;AAQA,QAAMM,aAAa,GAAG,MAAM;AAC1B,UAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAApB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CAAb;AACAD,IAAAA,IAAI,CAACE,QAAL,GAAgB,YAAhB;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYN,WAAW,CAACO,GAAxB;AACAJ,IAAAA,IAAI,CAACK,KAAL;AACD,GAND;;AAQA3B,EAAAA,OAAO,CAAC,MAAM;AACZ,UAAM4B,KAAK,GAAG,CACZ;AAAEF,MAAAA,GAAG,EAAElB;AAAP,KADY,EAEZ;AAAEkB,MAAAA,GAAG,EAAEZ;AAAP,KAFY,EAGZ;AAAEY,MAAAA,GAAG,EAAEhB;AAAP,KAHY,EAIZ;AAAEgB,MAAAA,GAAG,EAAEd;AAAP,KAJY,CAAd;AAMAX,IAAAA,WAAW,CAAC2B,KAAD,CAAX,CAAmBC,IAAnB,CACGZ,MAAD,IAAaG,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCK,GAAlC,GAAwCT,MADvD;AAGD,GAVM,EAUJ,CAACT,UAAD,EAAaE,IAAb,EAAmBE,IAAnB,EAAyBE,SAAzB,CAVI,CAAP;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA9CQX,M;;KAAAA,M;AAgDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nimport mergeImages from \"merge-images\";\nimport randomImageGenerator from \"../utils/RandomImage\";\n\n// components\n\nimport \"../css/Avatar.css\";\n\n// default avatar parts\nimport pinkBackground from \"../images/background/pinkBackground.png\";\nimport defaultHead from \"../images/head/pumpkinHead.png\";\nimport defaultFace from \"../images/face/pumpkinFace.png\";\nimport defaultAccessory from \"../images/accessories/pumpkinAccessory.png\";\n\nfunction Avatar() {\n  const [background, setBackground] = useState(pinkBackground);\n  const [head, setHead] = useState(defaultHead);\n  const [face, setFace] = useState(defaultFace);\n  const [accessory, setAccessory] = useState(defaultAccessory);\n\n  const getRandomImage = () => {\n    const avatar = randomImageGenerator();\n    setBackground(avatar.background);\n    setAccessory(avatar.accessory);\n    setHead(avatar.head);\n    setFace(avatar.face);\n  };\n\n  const downloadImage = () => {\n    const avatarImage = document.querySelector(\"#avatar\");\n    const link = document.createElement(\"a\");\n    link.download = \"avatar.png\";\n    link.href = avatarImage.src;\n    link.click();\n  };\n\n  useMemo(() => {\n    const parts = [\n      { src: background },\n      { src: accessory },\n      { src: head },\n      { src: face },\n    ];\n    mergeImages(parts).then(\n      (avatar) => (document.querySelector(\"#avatar\").src = avatar)\n    );\n  }, [background, head, face, accessory]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"left-pane\">\n        <img id=\"avatar\" alt=\"avatar\" />\n\n        <div className=\"left-pane-buttons\">\n          <button onClick={getRandomImage}>Random</button>\n          <button onClick={downloadImage}>Download</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}