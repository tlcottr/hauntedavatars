{"ast":null,"code":"var _jsxFileName = \"/Users/taylorcottrell/Desktop/Builds/hauntedavatars/src/components/Avatar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport mergeImages from \"merge-images\";\nimport randomImageGenerator from \"../utils/RandomImage\"; // components\n\nimport \"../css/Avatar.css\"; // default alpaca parts\n\nimport pinkBackground from \"../images/background/pinkBackground.png\";\nimport defaultHead from \"../images/head/pumpkinHead.png\";\nimport defaultFace from \"../images/face/pumpkinFace.png\";\nimport defaultAccessory from \"../images/accessories/noneAccessory.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Avatar() {\n  _s();\n\n  const [background, setBackground] = useState(blue50);\n  const [ears, setEars] = useState(defaultEars);\n  const [neck, setNeck] = useState(defaultNeck);\n  const [hair, setHair] = useState(defaultHair);\n  const [eyes, setEyes] = useState(defaultEyes);\n  const [mouth, setMouth] = useState(defaultMouth);\n  const [accessory, setAccessory] = useState(headphone);\n  const [leg, setLeg] = useState(defaultLeg);\n\n  const getRandomImage = () => {\n    const alpaca = randomImageGenerator();\n    setBackground(alpaca.background);\n    setEars(alpaca.ear);\n    setNeck(alpaca.neck);\n    setHair(alpaca.hair);\n    setEyes(alpaca.eye);\n    setMouth(alpaca.mouth);\n    setAccessory(alpaca.accessory);\n    setLeg(alpaca.leg);\n  };\n\n  const downloadImage = () => {\n    const alpacaImage = document.querySelector(\"#alpaca-avatar\");\n    const link = document.createElement(\"a\");\n    link.download = \"alpaca.png\";\n    link.href = alpacaImage.src;\n    link.click();\n  };\n\n  useMemo(() => {\n    const parts = [{\n      src: background\n    }, {\n      src: ears\n    }, {\n      src: neck\n    }, {\n      src: defaultNose\n    }, {\n      src: hair\n    }, {\n      src: accessory\n    }, {\n      src: eyes\n    }, {\n      src: mouth\n    }, {\n      src: leg\n    }];\n    mergeImages(parts).then(avatar => document.querySelector(\"#alpaca-avatar\").src = avatar);\n  }, [background, ears, neck, hair, eyes, mouth, accessory, leg]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"alpaca-avatar\",\n        alt: \"alpaca\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-pane-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRandomImage,\n          children: \"Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Avatar, \"smHbxqFPzN4G4nuHdigVquJgun4=\");\n\n_c = Avatar;\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"sources":["/Users/taylorcottrell/Desktop/Builds/hauntedavatars/src/components/Avatar.js"],"names":["React","useState","useMemo","mergeImages","randomImageGenerator","pinkBackground","defaultHead","defaultFace","defaultAccessory","Avatar","background","setBackground","blue50","ears","setEars","defaultEars","neck","setNeck","defaultNeck","hair","setHair","defaultHair","eyes","setEyes","defaultEyes","mouth","setMouth","defaultMouth","accessory","setAccessory","headphone","leg","setLeg","defaultLeg","getRandomImage","alpaca","ear","eye","downloadImage","alpacaImage","document","querySelector","link","createElement","download","href","src","click","parts","defaultNose","then","avatar"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nimport mergeImages from \"merge-images\";\nimport randomImageGenerator from \"../utils/RandomImage\";\n\n// components\n\nimport \"../css/Avatar.css\";\n\n// default alpaca parts\nimport pinkBackground from \"../images/background/pinkBackground.png\";\nimport defaultHead from \"../images/head/pumpkinHead.png\";\nimport defaultFace from \"../images/face/pumpkinFace.png\";\nimport defaultAccessory from \"../images/accessories/noneAccessory.png\";\n\nfunction Avatar() {\n  const [background, setBackground] = useState(blue50);\n  const [ears, setEars] = useState(defaultEars);\n  const [neck, setNeck] = useState(defaultNeck);\n  const [hair, setHair] = useState(defaultHair);\n  const [eyes, setEyes] = useState(defaultEyes);\n  const [mouth, setMouth] = useState(defaultMouth);\n  const [accessory, setAccessory] = useState(headphone);\n  const [leg, setLeg] = useState(defaultLeg);\n\n  const getRandomImage = () => {\n    const alpaca = randomImageGenerator();\n    setBackground(alpaca.background);\n    setEars(alpaca.ear);\n    setNeck(alpaca.neck);\n    setHair(alpaca.hair);\n    setEyes(alpaca.eye);\n    setMouth(alpaca.mouth);\n    setAccessory(alpaca.accessory);\n    setLeg(alpaca.leg);\n  };\n\n  const downloadImage = () => {\n    const alpacaImage = document.querySelector(\"#alpaca-avatar\");\n    const link = document.createElement(\"a\");\n    link.download = \"alpaca.png\";\n    link.href = alpacaImage.src;\n    link.click();\n  };\n\n  useMemo(() => {\n    const parts = [\n      { src: background },\n      { src: ears },\n      { src: neck },\n      { src: defaultNose },\n      { src: hair },\n      { src: accessory },\n      { src: eyes },\n      { src: mouth },\n      { src: leg },\n    ];\n    mergeImages(parts).then(\n      (avatar) => (document.querySelector(\"#alpaca-avatar\").src = avatar)\n    );\n  }, [background, ears, neck, hair, eyes, mouth, accessory, leg]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"left-pane\">\n        <img id=\"alpaca-avatar\" alt=\"alpaca\" />\n\n        <div className=\"left-pane-buttons\">\n          <button onClick={getRandomImage}>Random</button>\n          <button onClick={downloadImage}>Download</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}